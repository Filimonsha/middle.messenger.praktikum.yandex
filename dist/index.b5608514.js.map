{"mappings":"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","sources":["src/utils/framework/templateEngine/template.ts","src/utils/framework/const/regExp.ts","src/utils/framework/regexpHandler.ts","src/utils/framework/eventBus/index.ts","src/utils/framework/block/const/events.ts","src/utils/framework/block/index.ts","src/layout/chat/chatLayout.tmpl.ts","src/pages/home/modules/chat/sidebar/sidebar.tmpl.ts","src/pages/home/modules/chat/components/chatItem/chatItem.tmpl.ts","src/pages/home/modules/chat/components/chatItem/ChatItem.ts","src/pages/home/modules/chat/sidebar/Sidebar.ts","src/pages/home/modules/chat/main/main.tmpl.ts","src/pages/home/modules/chat/main/header/header.tmpl.ts","src/components/icons/optionIcon.ts","src/pages/home/modules/chat/main/header/Header.ts","src/pages/home/modules/chat/main/messages/messages.tmpl.ts","src/pages/home/modules/chat/components/message/message.tmpl.ts","src/pages/home/modules/chat/components/message/Message.ts","src/pages/home/modules/chat/main/messages/Messages.ts","src/pages/home/modules/chat/main/controlPanel/controlPanel.tmpl.ts","src/pages/home/modules/chat/main/controlPanel/ControlPanel.ts","src/pages/home/modules/chat/main/Main.ts","src/layout/chat/ChatLayout.ts","src/index.ts"],"sourcesContent":["import {\n  TEMPLATE_DYNAMIC_REGEXP,\n  TEMPLATE_IF_THEN_REGEXP,\n  TEMPLATE_VARIABLES_REGEXP,\n} from \"../const/regExp\";\nimport { FoundRegexpHandler, RegexpHandler } from \"../regexpHandler\";\n\nexport class Template {\n  private readonly initialTemplate: string;\n\n  private modifyTemplate: string;\n\n  constructor(template: string) {\n    this.initialTemplate = template;\n    this.modifyTemplate = this.initialTemplate;\n  }\n\n  compile(context?: object) {\n    const result = this.foundDynamicRegexp(context);\n    this.modifyTemplate = this.initialTemplate;\n    return result;\n  }\n\n  private getProperty(object, propertyName: string) {\n    const keys = propertyName.split(\".\");\n\n    let propertyOfObject;\n    let currentObject = object;\n    for (const key of keys) {\n      propertyOfObject = currentObject[key];\n      if (!propertyOfObject) return undefined;\n      currentObject = propertyOfObject;\n    }\n\n    return propertyOfObject;\n  }\n\n  private foundDynamicRegexp(context: object) {\n    this.renderSimpleVariables(context);\n    const conditionRegexpHandler: FoundRegexpHandler = (\n      foundedDynamicReg,\n      foundedMatch\n    ) => {\n      if (foundedDynamicReg.match(TEMPLATE_IF_THEN_REGEXP)) {\n        this.renderCondition(foundedDynamicReg, foundedMatch);\n      }\n    };\n    RegexpHandler.handAllFoundRegexp(\n      TEMPLATE_DYNAMIC_REGEXP,\n      this.modifyTemplate,\n      conditionRegexpHandler\n    );\n    this.replaceAllDynamicRegExp();\n    return this.modifyTemplate;\n  }\n\n  private replaceAllDynamicRegExp() {\n    const dynamicRegexpHandler: FoundRegexpHandler = (\n      foundedDynamicReg,\n      foundedMatch\n    ) =>\n      (this.modifyTemplate = this.modifyTemplate.replace(\n        foundedMatch,\n        foundedDynamicReg\n      ));\n\n    RegexpHandler.handAllFoundRegexp(\n      TEMPLATE_DYNAMIC_REGEXP,\n      this.modifyTemplate,\n      dynamicRegexpHandler,\n      false\n    );\n  }\n\n  private renderSimpleVariables(context: object) {\n    const simpleVariablesRegexpHandler: FoundRegexpHandler = (\n      foundedDynamicReg,\n      foundedMatch\n    ) => {\n      const property = this.getProperty(context, foundedDynamicReg);\n      if (foundedDynamicReg) {\n        const propertyElementIsComponent =\n          Array.isArray(property) &&\n          property.every((propertyElement) => {\n            const elementIsString = typeof propertyElement === \"string\";\n            return (\n              elementIsString &&\n              propertyElement.trim().startsWith(\"<div id=component-\")\n            );\n          });\n\n        this.modifyTemplate = this.modifyTemplate.replace(\n          new RegExp(foundedMatch, \"gi\"),\n          propertyElementIsComponent ? property.join(\"\") : property\n        );\n      }\n    };\n\n    RegexpHandler.handAllFoundRegexp(\n      TEMPLATE_VARIABLES_REGEXP,\n      this.modifyTemplate,\n      simpleVariablesRegexpHandler\n    );\n  }\n  private renderCondition(foundedDynamicReg: string, foundedMatch: string) {\n    const foundedConditionArgs =\n      TEMPLATE_IF_THEN_REGEXP.exec(foundedDynamicReg);\n    const condition = eval(foundedConditionArgs[1]);\n    const ifSuccessThen = foundedConditionArgs[2];\n    const ifFalseThen = foundedConditionArgs[3];\n    if (condition) {\n      this.modifyTemplate = this.modifyTemplate.replace(\n        foundedMatch,\n        ifSuccessThen\n      );\n    } else if (ifFalseThen) {\n      this.modifyTemplate = this.modifyTemplate.replace(foundedMatch, \"\");\n    }\n  }\n}\n","export const TEMPLATE_DYNAMIC_REGEXP = new RegExp(/\\{\\{([\\s\\S]*?)\\}\\}/gi);\nexport const TEMPLATE_IF_THEN_REGEXP = new RegExp(\n  /if\\((.*?)\\)then{(.*?)}(else{(.*?)})?/gi\n);\nexport const TEMPLATE_VARIABLES_REGEXP = new RegExp(/!(.*?)!/gi);\n","export type FoundRegexpHandler = (\n  foundedDynamicReg: string,\n  foundedMatch: string\n) => void;\nexport class RegexpHandler {\n  static handAllFoundRegexp(\n    regexpWhichNeedToFound: RegExp,\n    observeString: string,\n    foundRegexpHandler: FoundRegexpHandler,\n    splitAndJoin: boolean = true\n  ) {\n    let nextFoundMatchArray: RegExpExecArray = null;\n    while ((nextFoundMatchArray = regexpWhichNeedToFound.exec(observeString))) {\n      const foundedDynamicReg = splitAndJoin\n        ? nextFoundMatchArray[1].split(\" \").join(\"\")\n        : nextFoundMatchArray[1];\n      const foundedMatch = nextFoundMatchArray[0];\n      foundRegexpHandler(foundedDynamicReg, foundedMatch);\n    }\n  }\n}\n","interface IEventBus {\n    subscribeCallbackOnEvent: (eventName:string, callback:Function) => void,\n    unSubscribeCallbackFromEvent: (eventName:string, callback:Function) => void,\n    notify: (eventName:string) => void\n}\n\nexport class EventBus implements IEventBus {\n  private listeners:object = {};\n\n  constructor() {\n  }\n\n  subscribeCallbackOnEvent(eventName: string, callback: Function): void {\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = [];\n    }\n\n    this.listeners[eventName].push(callback);\n  }\n\n  unSubscribeCallbackFromEvent(eventName: string, callback: Function): void {\n    if (!this.listeners[eventName]) {\n      throw new Error('This event does not exist');\n    }\n\n    this.listeners[eventName] = this.listeners[eventName].filter(\n      (listener) => listener !== callback,\n    );\n  }\n\n  notify(event, ...args) {\n    if (!this.listeners[event]) {\n      throw new Event(`Нет события: ${event}`);\n    }\n\n    this.listeners[event].forEach((listener) => {\n      listener(...args);\n    });\n  }\n}\n","export enum Events {\n    INIT = 'init',\n    COMPONENT_DID_MOUNT = 'ComponentDidMount',\n    COMPONENT_RENDER = 'ComponentRender',\n    COMPONENT_DID_UNMOUNT = 'ComponentDidUnmount',\n    COMPONENT_DID_UPDATE = 'ComponentDidUpdate'\n}\n","import { v4 as makeUUID } from \"uuid\";\nimport { EventBus } from \"../eventBus\";\nimport { Events } from \"./const/events\";\nimport { Template } from \"../templateEngine/template\";\ntype Props = {\n  state: object;\n  events?: object;\n};\n\nexport abstract class Block {\n  private eventBus = new EventBus();\n\n  private element: HTMLElement;\n\n  private readonly template: Template;\n\n  private readonly componentProps: Props;\n\n  private componentState;\n\n  private readonly componentChildren: object | null;\n\n  private readonly componentSimpleState: object;\n\n  // private readonly componentId = `component-${makeUUID()}`;\n  private readonly componentId = `component-${Math.random()*1000}`;\n\n  // private\n  protected constructor(template: Template, props: Props) {\n    this.template = template;\n    this.componentProps = props;\n    const { children, simpleState } = this.findChildrenAndState(props.state);\n    this.componentChildren = children;\n    this.componentSimpleState = simpleState;\n    if (children) {\n      this.createDummyChildren();\n    }\n    this.makeStateProxy();\n    this.registerEvents();\n    this.eventBus.notify(Events.INIT);\n  }\n\n  private registerEvents = () => {\n    this.eventBus.subscribeCallbackOnEvent(Events.INIT, this.init.bind(this));\n    this.eventBus.subscribeCallbackOnEvent(\n      Events.COMPONENT_DID_MOUNT,\n      this.componentDidMount.bind(this)\n    );\n    this.eventBus.subscribeCallbackOnEvent(\n      Events.COMPONENT_RENDER,\n      this.render.bind(this)\n    );\n    this.eventBus.subscribeCallbackOnEvent(\n      Events.COMPONENT_DID_UPDATE,\n      this.componentDidUpdate.bind(this)\n    );\n  };\n\n  // State Proxy\n  private makeStateProxy = () => {\n    const handlers: ProxyHandler<any> = {\n      set: (target, p, value) => {\n        target[p] = value;\n        this.eventBus.notify(Events.COMPONENT_DID_UPDATE);\n        return true;\n      },\n    };\n    this.componentState = new Proxy(this.componentProps.state, handlers);\n  };\n\n  // Events\n  private init = () => {\n    const createDummyElement = () => {\n      this.element = document.createElement(\"div\");\n    };\n\n    createDummyElement();\n    this.eventBus.notify(Events.COMPONENT_RENDER);\n  };\n\n  private componentDidMount(oldProps) {\n    console.log(\"component did mount\");\n  }\n\n  private componentDidUpdate() {\n    console.log(\" Component Did update!\");\n    this.eventBus.notify(Events.COMPONENT_RENDER);\n  }\n\n  private render = () => {\n    if (this.element && this.componentProps.events) {\n      Object.keys(this.componentProps.events).forEach((eventName) => {\n        this.element.removeEventListener(\n          eventName,\n          this.componentProps.events[eventName]\n        );\n      });\n    }\n    this.element.innerHTML = this.template.compile(this.componentState);\n    this.element = this.element.children[0];\n    console.log(this.element.children);\n    // AttributeHandler.handEventsAttributes(this.element)\n    if (this.componentChildren) {\n      this.renderChildren();\n    }\n\n    if (this.componentProps.events) {\n      Object.keys(this.componentProps.events).forEach((eventName) => {\n        this.element.addEventListener(\n          eventName,\n          this.componentProps.events[eventName].bind(this)\n        );\n      });\n    }\n  };\n\n  // find children\n  private findChildrenAndState = (state) => {\n    const children = {};\n    const simpleState = {};\n\n    Object.entries(state).forEach(([key, value]) => {\n      const stateValueIsArray = Array.isArray(value);\n      if (stateValueIsArray) {\n        if (value.every((element) => element instanceof Block)) {\n          children[key] = [];\n          value.forEach((childElement: Block, index) => {\n            children[key].push(childElement);\n          });\n        }\n      } else if (value instanceof Block) {\n        children[key] = value;\n      } else {\n        simpleState[key] = value;\n      }\n    });\n    return { children, simpleState };\n  };\n\n  private createDummyChildren() {\n    const createDummyChild = (childrenValue: Block, childrenName: string) => {};\n    Object.entries(this.componentChildren).forEach((children) => {\n      const childrenName = children[0];\n      const childrenValue: Block | Array<Block> = children[1];\n      if (Array.isArray(childrenValue)) {\n        childrenValue.forEach((child, index) => {\n          const childrenDummy = `\n                <div id=${child.componentId}></div>\n            `;\n          this.componentProps.state[childrenName][index] = childrenDummy;\n        });\n      } else {\n        const childrenDummy = `\n                <div id=${childrenValue.componentId}></div>\n            `;\n        this.componentProps.state[childrenName] = childrenDummy;\n      }\n    });\n  }\n\n  private renderChildren() {\n    const renderOneChild = (child: Block) => {\n      const childrenId = `#${child.componentId.toString()}`;\n      const foundChildrenDummy = this.element.querySelector(childrenId);\n      if (foundChildrenDummy) {\n        console.error(foundChildrenDummy);\n        foundChildrenDummy.replaceWith(child.getCompiledElement());\n      } else {\n        throw new Error(\"In template didnt find children layout!\");\n      }\n    };\n    Object.values(this.componentChildren).forEach((children) => {\n      if (Array.isArray(children)) children.forEach(renderOneChild);\n      else renderOneChild(children);\n    });\n  }\n\n  // User interaction\n  public updateState = (stateName, newValue) => {\n    this.componentState[stateName] = newValue;\n  };\n\n  public getState = () => ({ ...this.componentState });\n\n  public getComponentChildren = () => ({ ...this.componentChildren });\n\n  public getCompiledElement = () => this.element;\n\n  public renderDom = (rootSelector: string) => {\n    const root = document.querySelector(rootSelector);\n    root.appendChild(this.element);\n    this.eventBus.notify(Events.COMPONENT_DID_MOUNT);\n  };\n}\n","import { Template } from \"../../utils/framework/templateEngine/template\";\nimport \"./chat.scss\";\n\nexport const chatLayoutTemplate = new Template(`\n   <div class=\"chat\">\n      {{!Sidebar!}}\n      {{!Main!}}\n\n   </div>\n   \n`);\n","import { Template } from '../../../../../utils/framework/templateEngine/template';\nimport './sidebar.scss';\n\nexport const sidebarTemplate = new Template(`\n<div class=\"sidebar\">\n        <div class=\"chat_chats\">\n            {{!chatItems!}}\n        </div>\n    <input type=\"text\" class=\"sidebar_search\">\n</div>\n`);\n","import { Template } from '../../../../../../utils/framework/templateEngine/template';\nimport './chatItem.scss';\n\nexport const chatItemTemplate = new Template(\n  `\n        <div class=\"chat-item\">\n        <div class=\"chat-item_img\">\n                        <img src=\"https://www.google.com/url?sa=i&url=https%3A%2F%2Favatarko.ru%2Fkartinka%2F32117&psig=AOvVaw0qWlT3XgCtRGL8gijD5Mev&ust=1665438264092000&source=images&cd=vfe&ved=0CAsQjRxqFwoTCMDNrZKP1PoCFQAAAAAdAAAAABAE\" alt=\"avatar\">\n        </div>\n        <div class=\"chat-item_desc\">\n            <div class=\"chat-item_msg\">\n                <span class=\"chat-item_user-name\">{{ !userName!}}</span>\n                <span class=\"chat-item_last-msg\">{{ !lastMsg! }}</span>\n            </div>\n        </div>\n        <div class=\"chat-item_info\">\n            <div class=\"chat-item_time\">\n                {{ !lastMsgTime! }}\n            </div>\n            <div class=\"chat-item_notification\">\n                {{ !countOfNotification! }}\n            </div>\n        </div>\n    </div>\n    `,\n);\n","import { Block } from \"../../../../../../utils/framework/block\";\nimport { chatItemTemplate } from \"./chatItem.tmpl\";\n\nexport class ChatItem extends Block {\n  constructor(props) {\n    super(chatItemTemplate, props);\n  }\n}\n","import { Block } from \"../../../../../utils/framework/block\";\nimport { sidebarTemplate } from \"./sidebar.tmpl\";\nimport { ChatItem } from \"../components/chatItem\";\n\nconst chats = [\n  {\n    imgSrc: \"\",\n    userName: \"Oleg\",\n    lastMsg: \" some long text or not long a dnot know u know what i mean\",\n    lastMsgTime: `${new Date(12414).getHours()}:20`,\n    countOfNotification: 2,\n  },\n  {\n    imgSrc: \"\",\n    userName: \"Oleg\",\n    lastMsg: \" some long text or not long a dnot know u know what i mean\",\n    lastMsgTime: `${new Date(12414).getHours()}:20`,\n    countOfNotification: 2,\n  },\n  {\n    imgSrc: \"\",\n    userName: \"Oleg\",\n    lastMsg:\n      \" some long text or not long a dnot know u \" +\n      \"know what i mean some long text or not long a dnot know u \" +\n      \"know what i meansome long text or not long a dnot know u know what i mean\",\n    lastMsgTime: `${new Date(12414).getHours()}:20`,\n    countOfNotification: 2,\n  },\n  {\n    imgSrc: \"\",\n    userName: \"Oleg\",\n    lastMsg: \" some long text or not long a dnot know u know what i mean\",\n    lastMsgTime: `${new Date(12414).getHours()}:20`,\n    countOfNotification: 2,\n  },\n  {\n    imgSrc: \"\",\n    userName: \"Oleg\",\n    lastMsg: \" some long text or not long a dnot know u know what i mean\",\n    lastMsgTime: `${new Date(12414).getHours()}:20`,\n    countOfNotification: 2,\n  },\n  {\n    imgSrc: \"\",\n    userName: \"Oleg\",\n    lastMsg: \" some long text or not long a dnot know u know what i mean\",\n    lastMsgTime: `${new Date(12414).getHours()}:20`,\n    countOfNotification: 2,\n  },\n];\n\nconst sidebarState = {\n  state: {\n    chatItems: chats.map(\n      (chatData) =>\n        new ChatItem({\n          state: chatData,\n        })\n    ),\n  },\n};\n\nexport class Sidebar extends Block {\n  constructor(props) {\n    super(sidebarTemplate, props);\n  }\n}\nconst SidebarComponent = new Sidebar(sidebarState);\nexport default SidebarComponent;\n","import { Template } from \"../../../../../utils/framework/templateEngine/template\";\nimport \"./main.scss\";\n\nexport const mainTemplate = new Template(`\n       <div class=\"main\">\n        {{ !Header! }}\n        {{ !Messages! }}\n        {{ !ControlPanel! }}\n        </div>\n`);\n","import { Template } from '../../../../../../utils/framework/templateEngine/template';\nimport './header.scss';\nimport { OptionIcon } from '../../../../../../components/icons/optionIcon';\n\nexport const headerTemplate = new Template(`\n        <div class=\"header\">\n        <div class=\"header_user\">\n            <div class=\"header_avatar\">\n                <img src=\"\" alt=\"\">\n            </div>\n            <div class=\"header_name\">\n                <span>\n                    {{ !userName! }}\n                </span>\n            </div>\n        </div>\n        <button class=\"btn header_optionsBtn\">\n            ${OptionIcon()}\n        </button>\n    </div>\n`);\n","export const OptionIcon = () => (`\n<svg width=\"3\" height=\"16\" viewBox=\"0 0 3 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<circle cx=\"1.5\" cy=\"2\" r=\"1.5\" fill=\"#1E1E1E\"/>\n<circle cx=\"1.5\" cy=\"8\" r=\"1.5\" fill=\"#1E1E1E\"/>\n<circle cx=\"1.5\" cy=\"14\" r=\"1.5\" fill=\"#1E1E1E\"/>\n</svg>\n\n`);\n","import { Block } from \"../../../../../../utils/framework/block\";\nimport { headerTemplate } from \"./header.tmpl\";\n\nclass Header extends Block {\n  constructor(props) {\n    super(headerTemplate, props);\n  }\n}\nexport const HeaderComponent = new Header({\n  state: {\n    userName: \"Oleg\",\n  },\n});\n","import { Template } from \"../../../../../../utils/framework/templateEngine/template\";\nimport \"./messages.scss\";\nimport { Message } from \"../../components/message\";\n\nexport const messagesTemplate = new Template(`\n    <div class=\"messages\"> \n        {{ !messages! }}\n    </div>\n`);\n","import { Template } from '../../../../../../utils/framework/templateEngine/template';\nimport './message.scss';\n\nexport const messageTemplate = new Template(`\n            <div class=\"message {{ if ( !user! ===\"home\") then {message__my} }}\">\n            <div class=\"message_info\">\n                <p class=\"message_time\"></p>\n                <div class=\"message_check\">\n                    check\n                </div>\n            </div>\n            <p class=\"message_text\">\n                {{ !messageText! }}\n            </p>\n            </div>\n    `);\n","import { Block } from \"../../../../../../utils/framework/block\";\nimport { messageTemplate } from \"./message.tmpl\";\n\nexport class Message extends Block {\n  constructor(props) {\n    super(messageTemplate, props);\n  }\n}\n","import { Block } from \"../../../../../../utils/framework/block\";\nimport { messagesTemplate } from \"./messages.tmpl\";\nimport { Message } from \"../../components/message\";\n\nconst messagesData = [\n  {\n    user: '\"user\"',\n    messageText:\n      \"Привет! Смотри, тут всплыл интересный кусок лунной космической истории — НАСА в какой-то момент попросила Хассельблад адаптировать модель SWC для полетов на Луну. Сейчас мы все знаем что астронавты летали с моделью 500 EL — и к слову говоря, все тушки этих камер все еще находятся на поверхности Луны, так как астронавты с собой забрали только кассеты с пленкой Хассельблад в итоге адаптировал SWC для космоса, но что-то пошло не так и на ракету они так никогда и не попали. Всего их было произведено 25 штук, одну из них недавно продали на аукционе за 45000 евро.\",\n  },\n  {\n    user: '\"home\"',\n    messageText: \"Hello!\",\n  },\n  {\n    user: '\"some\"',\n    messageText: \"Hello!\",\n  },\n];\nconst MessagesProps = {\n  state: {\n    messages: messagesData.map(\n      (messageData) =>\n        new Message({\n          state: messageData,\n        })\n    ),\n  },\n  text: \"hello\",\n};\n\nclass Messages extends Block {\n  constructor(props) {\n    super(messagesTemplate, props);\n  }\n}\nexport const MessagesComponent = new Messages(MessagesProps);\n","import { Template } from \"../../../../../../utils/framework/templateEngine/template\";\nimport \"./controlPanel.scss\";\n\nexport const controlPanelTemplate = new Template(`\n    <div class=\"control-panel\">\n        <form class=\"control-panel_form\">\n        <button class=\"control-panel_btn\">\n            Option\n        </button>\n            <input type=\"text\">\n            <button type=\"submit\">\n                отпр\n            </button>\n        </form>\n    </div>\n`);\n","import { Block } from \"../../../../../../utils/framework/block\";\nimport { controlPanelTemplate } from \"./controlPanel.tmpl\";\n\nexport class ControlPanel extends Block {\n  constructor(props) {\n    super(controlPanelTemplate, props);\n  }\n}\nexport const ControlPanelComponent = new ControlPanel({\n  state: {},\n});\n","import { Block } from \"../../../../../utils/framework/block\";\nimport { mainTemplate } from \"./main.tmpl\";\nimport { HeaderComponent } from \"./header\";\nimport { MessagesComponent } from \"./messages\";\nimport { ControlPanelComponent } from \"./controlPanel/ControlPanel\";\n\nconst mainProps = {\n  state: {\n    Header: HeaderComponent,\n    Messages: MessagesComponent,\n    ControlPanel: ControlPanelComponent,\n  },\n};\nclass Main extends Block {\n  constructor(props) {\n    super(mainTemplate, props);\n  }\n}\nexport const MainComponent = new Main(mainProps);\n","import { Block } from \"../../utils/framework/block\";\nimport { chatLayoutTemplate } from \"./chatLayout.tmpl\";\nimport SidebarComponent from \"../../pages/home/modules/chat/sidebar/Sidebar\";\nimport { MainComponent } from \"../../pages/home/modules/chat/main\";\n\nconst chatLayoutProps = {\n  state: {\n    Sidebar: SidebarComponent,\n    Main: MainComponent,\n  },\n};\nclass ChatLayout extends Block {\n  constructor(props) {\n    super(chatLayoutTemplate, props);\n  }\n}\nexport const ChatLayoutComponent = new ChatLayout(chatLayoutProps);\n","import \"./index.scss\";\nimport { ChatLayoutComponent } from \"./layout/chat/ChatLayout\";\nChatLayoutComponent.renderDom(\"#CHAT\");\n"],"names":["$dXPMl","parcelRequire","Template","constructor","template","this","initialTemplate","modifyTemplate","compile","context","result","foundDynamicRegexp","getProperty","object","propertyName","keys","split","propertyOfObject","currentObject","key","renderSimpleVariables","$531dJ","RegexpHandler","handAllFoundRegexp","TEMPLATE_DYNAMIC_REGEXP","foundedDynamicReg","foundedMatch","match","TEMPLATE_IF_THEN_REGEXP","renderCondition","replaceAllDynamicRegExp","replace","TEMPLATE_VARIABLES_REGEXP","property","propertyElementIsComponent","Array","isArray","every","propertyElement","trim","startsWith","RegExp","join","foundedConditionArgs","exec","condition","eval","ifSuccessThen","ifFalseThen","$07ead5b0226b69de$export$fa1ae4cb4cfb3d85","$07ead5b0226b69de$export$28a67a1e38c95a8","$07ead5b0226b69de$export$f7f3291483a69df7","$e85c0062e8f40d9a$export$394a50fda190d88a","static","regexpWhichNeedToFound","observeString","foundRegexpHandler","splitAndJoin","nextFoundMatchArray","$c23ea2dea9cf40e7$export$5087227eb54526","listeners","subscribeCallbackOnEvent","eventName","callback","push","unSubscribeCallbackFromEvent","Error","filter","listener","notify","event","args","Event","forEach","$7d5511ac354dcb04$export$ada873a34909da65","Events","$2eae050ae67d4152$export$d96a8827a60d6b69","eventBus","componentId","Math","random","props","componentProps","children","simpleState","findChildrenAndState","state","componentChildren","componentSimpleState","createDummyChildren","makeStateProxy","registerEvents","INIT","init","bind","COMPONENT_DID_MOUNT","componentDidMount","COMPONENT_RENDER","render","COMPONENT_DID_UPDATE","componentDidUpdate","handlers","set","target","p","value","componentState","Proxy","element","document","createElement","createDummyElement","oldProps","console","log","events","Object","removeEventListener","innerHTML","renderChildren","addEventListener","entries","childElement","index","childrenName","childrenValue","child","childrenDummy","renderOneChild","childrenId","toString","foundChildrenDummy","querySelector","error","replaceWith","getCompiledElement","values","updateState","stateName","newValue","getState","getComponentChildren","renderDom","rootSelector","appendChild","$lsS9H","$14dc47f5c3ea7fab$export$e13744a440bffbe5","$5071f4a91a36ced0$export$69e09d1f57cb718b","$310a98cb781dd690$export$b3f039d6d35e940d","$9931e99d9d235a8d$export$86e6771ca9311520","super","$138600600f4ecf53$var$chats","imgSrc","userName","lastMsg","lastMsgTime","Date","getHours","countOfNotification","$138600600f4ecf53$var$sidebarState","chatItems","map","chatData","$138600600f4ecf53$export$1ba59dacbcbf90fe","$138600600f4ecf53$var$SidebarComponent","$138600600f4ecf53$export$2e2bcd8739ae039","$d0d7d8957d8b8034$export$e26c86124a0f221e","$16c93a6bbb346d72$export$cbe66ba5a24d87ce","$dbe7e14458e42640$export$dbd39ed0fa3f5b27","$62ffb795d904da25$var$Header","$62ffb795d904da25$export$5be6d1e4b3a88225","$d99b6debb42f4ac4$export$ae3cc75cad1f82d3","$f1ed9c2a49cc1508$export$58500ae1f4c10db9","$8c9b7ea4e4daec25$export$f69c19e57285b83a","$a4d70660fd790114$var$messagesData","user","messageText","$a4d70660fd790114$var$MessagesProps","messages","messageData","text","$a4d70660fd790114$var$Messages","$a4d70660fd790114$export$6423fa4ca20a8fff","$a41663b4def1242f$export$cb39c6bd5df727ba","$4144e59b7ddd5114$export$41daf28bb61ded76","$4144e59b7ddd5114$export$76da6b629ee357","$583a429731fc2a1a$var$mainProps","Header","Messages","ControlPanel","$583a429731fc2a1a$var$Main","$583a429731fc2a1a$export$5ff9e46e0b0ff25f","$1ca116013368b965$var$chatLayoutProps","Sidebar","Main","$1ca116013368b965$var$ChatLayout","$1ca116013368b965$export$7b5ee86237a00352"],"version":3,"file":"index.b5608514.js.map","sourceRoot":"../"}