{"mappings":"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","sources":["src/layout/login/Login.ts","src/utils/framework/block/index.ts","src/utils/framework/eventBus/index.ts","src/utils/framework/block/const/events.ts","src/layout/login/login.tmpl.ts","src/utils/framework/templateEngine/template.ts","src/utils/framework/const/regExp.ts","src/utils/framework/regexpHandler.ts","src/utils/helpers/validator/validator.ts","src/utils/helpers/validator/const.ts","src/components/input/index.ts","src/components/input/input.tmpl.ts","src/components/btns/mainBtn/index.ts","src/components/btns/mainBtn/mainBtn.tmpl.ts","src/components/btns/defaultBtn/index.ts","src/components/btns/defaultBtn/defaultBtn.tmpl.ts"],"sourcesContent":["import { Block } from \"../../utils/framework/block\";\nimport { loginLayoutTemplate } from \"./login.tmpl\";\nimport { Validator } from \"../../utils/helpers/validator/validator\";\nimport { Input } from \"../../components/input\";\nimport { MainBtn } from \"../../components/btns/mainBtn\";\nimport { DefaultBtn } from \"../../components/btns/defaultBtn\";\n\nclass LoginLayout extends Block {\n  constructor(props) {\n    super(loginLayoutTemplate, props);\n  }\n}\n\nconst validator = new Validator();\nconst mainBtnData = {\n  state: {\n    type: \"submit\",\n    text: \"Enter\",\n  },\n  events: {\n    submit: (e) => {\n      console.log(\"Submit\");\n    },\n  },\n};\nconst defaultBtnData = {\n  state: {\n    type: \"button\",\n    text: \"Not register yet ?\",\n  },\n  events: {\n    click: (e) => console.log(\"Пользователь нажал на регистрацию\"),\n  },\n};\n\nexport function loginAndPasswordValidationHandle(target, stateName) {\n  console.log(validator.validate(stateName, target.value));\n  this.updateState(\"inputValue\", target.value);\n}\n\nconst loginData = {\n  state: {\n    logins: [\n      new Input({\n        state: {\n          labelName: \"login\",\n          inputValue: \"some text\",\n        },\n        events: {\n          blur({ target }) {\n            loginAndPasswordValidationHandle.call(this, target, \"login\");\n          },\n          focus({ target }) {\n            loginAndPasswordValidationHandle.call(this, target, \"login\");\n          },\n        },\n      }),\n      new Input({\n        state: {\n          labelName: \"password\",\n          inputValue: \"another text\",\n        },\n        events: {\n          blur({ target }) {\n            loginAndPasswordValidationHandle.call(this, target, \"password\");\n          },\n          focus({ target }) {\n            loginAndPasswordValidationHandle.call(this, target, \"password\");\n          },\n        },\n      }),\n    ],\n    MainButton: new MainBtn(mainBtnData),\n    DefaultButton: new DefaultBtn(defaultBtnData),\n  },\n  events: {\n    submit(e) {\n      e.preventDefault();\n      console.log(this.getComponentChildren());\n      this.getComponentChildren().logins.forEach((login) => {\n        const currentLoginInputState = login.getState();\n        console.error(\n          validator.validate(\n            currentLoginInputState.labelName,\n            currentLoginInputState.inputValue\n          )\n        );\n      });\n    },\n  },\n};\nexport const LoginLayoutComponent = new LoginLayout(loginData);\n","import { v4 as makeUUID } from \"uuid\";\nimport { EventBus } from \"../eventBus\";\nimport { Events } from \"./const/events\";\nimport { Template } from \"../templateEngine/template\";\ntype Props = {\n  state: object;\n  events?: object;\n};\n\nexport abstract class Block {\n  private eventBus = new EventBus();\n\n  private element: HTMLElement;\n\n  private readonly template: Template;\n\n  private readonly componentProps: Props;\n\n  private componentState;\n\n  private readonly componentChildren: object | null;\n\n  private readonly componentSimpleState: object;\n\n  // private readonly componentId = `component-${makeUUID()}`;\n  private readonly componentId = `component-${Math.random()*1000}`;\n\n  // private\n  protected constructor(template: Template, props: Props) {\n    this.template = template;\n    this.componentProps = props;\n    const { children, simpleState } = this.findChildrenAndState(props.state);\n    this.componentChildren = children;\n    this.componentSimpleState = simpleState;\n    if (children) {\n      this.createDummyChildren();\n    }\n    this.makeStateProxy();\n    this.registerEvents();\n    this.eventBus.notify(Events.INIT);\n  }\n\n  private registerEvents = () => {\n    this.eventBus.subscribeCallbackOnEvent(Events.INIT, this.init.bind(this));\n    this.eventBus.subscribeCallbackOnEvent(\n      Events.COMPONENT_DID_MOUNT,\n      this.componentDidMount.bind(this)\n    );\n    this.eventBus.subscribeCallbackOnEvent(\n      Events.COMPONENT_RENDER,\n      this.render.bind(this)\n    );\n    this.eventBus.subscribeCallbackOnEvent(\n      Events.COMPONENT_DID_UPDATE,\n      this.componentDidUpdate.bind(this)\n    );\n  };\n\n  // State Proxy\n  private makeStateProxy = () => {\n    const handlers: ProxyHandler<any> = {\n      set: (target, p, value) => {\n        target[p] = value;\n        this.eventBus.notify(Events.COMPONENT_DID_UPDATE);\n        return true;\n      },\n    };\n    this.componentState = new Proxy(this.componentProps.state, handlers);\n  };\n\n  // Events\n  private init = () => {\n    const createDummyElement = () => {\n      this.element = document.createElement(\"div\");\n    };\n\n    createDummyElement();\n    this.eventBus.notify(Events.COMPONENT_RENDER);\n  };\n\n  private componentDidMount(oldProps) {\n    console.log(\"component did mount\");\n  }\n\n  private componentDidUpdate() {\n    console.log(\" Component Did update!\");\n    this.eventBus.notify(Events.COMPONENT_RENDER);\n  }\n\n  private render = () => {\n    if (this.element && this.componentProps.events) {\n      Object.keys(this.componentProps.events).forEach((eventName) => {\n        this.element.removeEventListener(\n          eventName,\n          this.componentProps.events[eventName]\n        );\n      });\n    }\n    this.element.innerHTML = this.template.compile(this.componentState);\n    this.element = this.element.children[0];\n    console.log(this.element.children);\n    // AttributeHandler.handEventsAttributes(this.element)\n    if (this.componentChildren) {\n      this.renderChildren();\n    }\n\n    if (this.componentProps.events) {\n      Object.keys(this.componentProps.events).forEach((eventName) => {\n        this.element.addEventListener(\n          eventName,\n          this.componentProps.events[eventName].bind(this)\n        );\n      });\n    }\n  };\n\n  // find children\n  private findChildrenAndState = (state) => {\n    const children = {};\n    const simpleState = {};\n\n    Object.entries(state).forEach(([key, value]) => {\n      const stateValueIsArray = Array.isArray(value);\n      if (stateValueIsArray) {\n        if (value.every((element) => element instanceof Block)) {\n          children[key] = [];\n          value.forEach((childElement: Block, index) => {\n            children[key].push(childElement);\n          });\n        }\n      } else if (value instanceof Block) {\n        children[key] = value;\n      } else {\n        simpleState[key] = value;\n      }\n    });\n    return { children, simpleState };\n  };\n\n  private createDummyChildren() {\n    const createDummyChild = (childrenValue: Block, childrenName: string) => {};\n    Object.entries(this.componentChildren).forEach((children) => {\n      const childrenName = children[0];\n      const childrenValue: Block | Array<Block> = children[1];\n      if (Array.isArray(childrenValue)) {\n        childrenValue.forEach((child, index) => {\n          const childrenDummy = `\n                <div id=${child.componentId}></div>\n            `;\n          this.componentProps.state[childrenName][index] = childrenDummy;\n        });\n      } else {\n        const childrenDummy = `\n                <div id=${childrenValue.componentId}></div>\n            `;\n        this.componentProps.state[childrenName] = childrenDummy;\n      }\n    });\n  }\n\n  private renderChildren() {\n    const renderOneChild = (child: Block) => {\n      const childrenId = `#${child.componentId.toString()}`;\n      const foundChildrenDummy = this.element.querySelector(childrenId);\n      if (foundChildrenDummy) {\n        console.error(foundChildrenDummy);\n        foundChildrenDummy.replaceWith(child.getCompiledElement());\n      } else {\n        throw new Error(\"In template didnt find children layout!\");\n      }\n    };\n    Object.values(this.componentChildren).forEach((children) => {\n      if (Array.isArray(children)) children.forEach(renderOneChild);\n      else renderOneChild(children);\n    });\n  }\n\n  // User interaction\n  public updateState = (stateName, newValue) => {\n    this.componentState[stateName] = newValue;\n  };\n\n  public getState = () => ({ ...this.componentState });\n\n  public getComponentChildren = () => ({ ...this.componentChildren });\n\n  public getCompiledElement = () => this.element;\n\n  public renderDom = (rootSelector: string) => {\n    const root = document.querySelector(rootSelector);\n    root.appendChild(this.element);\n    this.eventBus.notify(Events.COMPONENT_DID_MOUNT);\n  };\n}\n","interface IEventBus {\n    subscribeCallbackOnEvent: (eventName:string, callback:Function) => void,\n    unSubscribeCallbackFromEvent: (eventName:string, callback:Function) => void,\n    notify: (eventName:string) => void\n}\n\nexport class EventBus implements IEventBus {\n  private listeners:object = {};\n\n  constructor() {\n  }\n\n  subscribeCallbackOnEvent(eventName: string, callback: Function): void {\n    if (!this.listeners[eventName]) {\n      this.listeners[eventName] = [];\n    }\n\n    this.listeners[eventName].push(callback);\n  }\n\n  unSubscribeCallbackFromEvent(eventName: string, callback: Function): void {\n    if (!this.listeners[eventName]) {\n      throw new Error('This event does not exist');\n    }\n\n    this.listeners[eventName] = this.listeners[eventName].filter(\n      (listener) => listener !== callback,\n    );\n  }\n\n  notify(event, ...args) {\n    if (!this.listeners[event]) {\n      throw new Event(`Нет события: ${event}`);\n    }\n\n    this.listeners[event].forEach((listener) => {\n      listener(...args);\n    });\n  }\n}\n","export enum Events {\n    INIT = 'init',\n    COMPONENT_DID_MOUNT = 'ComponentDidMount',\n    COMPONENT_RENDER = 'ComponentRender',\n    COMPONENT_DID_UNMOUNT = 'ComponentDidUnmount',\n    COMPONENT_DID_UPDATE = 'ComponentDidUpdate'\n}\n","import { Input } from \"../../components/input\";\nimport { MainBtn } from \"../../components/btns/mainBtn\";\nimport { DefaultBtn } from \"../../components/btns/defaultBtn\";\nimport \"./login.scss\";\nimport { Template } from \"../../utils/framework/templateEngine/template\";\n\nexport const loginLayoutTemplate = new Template(`\n    <div class=\"login\">\n        <div class=\"login_container\">\n            <h1 class=\"login_title\">Вход</h1>\n            <form class=\"login_form\">\n            {{!logins!}}\n             \n             <div class=\"login_buttons\">\n                {{!MainButton!}}\n                {{!DefaultButton!}}\n            </div>\n            </form>\n        </div>\n    </div>\n`);\n","import {\n  TEMPLATE_DYNAMIC_REGEXP,\n  TEMPLATE_IF_THEN_REGEXP,\n  TEMPLATE_VARIABLES_REGEXP,\n} from \"../const/regExp\";\nimport { FoundRegexpHandler, RegexpHandler } from \"../regexpHandler\";\n\nexport class Template {\n  private readonly initialTemplate: string;\n\n  private modifyTemplate: string;\n\n  constructor(template: string) {\n    this.initialTemplate = template;\n    this.modifyTemplate = this.initialTemplate;\n  }\n\n  compile(context?: object) {\n    const result = this.foundDynamicRegexp(context);\n    this.modifyTemplate = this.initialTemplate;\n    return result;\n  }\n\n  private getProperty(object, propertyName: string) {\n    const keys = propertyName.split(\".\");\n\n    let propertyOfObject;\n    let currentObject = object;\n    for (const key of keys) {\n      propertyOfObject = currentObject[key];\n      if (!propertyOfObject) return undefined;\n      currentObject = propertyOfObject;\n    }\n\n    return propertyOfObject;\n  }\n\n  private foundDynamicRegexp(context: object) {\n    this.renderSimpleVariables(context);\n    const conditionRegexpHandler: FoundRegexpHandler = (\n      foundedDynamicReg,\n      foundedMatch\n    ) => {\n      if (foundedDynamicReg.match(TEMPLATE_IF_THEN_REGEXP)) {\n        this.renderCondition(foundedDynamicReg, foundedMatch);\n      }\n    };\n    RegexpHandler.handAllFoundRegexp(\n      TEMPLATE_DYNAMIC_REGEXP,\n      this.modifyTemplate,\n      conditionRegexpHandler\n    );\n    this.replaceAllDynamicRegExp();\n    return this.modifyTemplate;\n  }\n\n  private replaceAllDynamicRegExp() {\n    const dynamicRegexpHandler: FoundRegexpHandler = (\n      foundedDynamicReg,\n      foundedMatch\n    ) =>\n      (this.modifyTemplate = this.modifyTemplate.replace(\n        foundedMatch,\n        foundedDynamicReg\n      ));\n\n    RegexpHandler.handAllFoundRegexp(\n      TEMPLATE_DYNAMIC_REGEXP,\n      this.modifyTemplate,\n      dynamicRegexpHandler,\n      false\n    );\n  }\n\n  private renderSimpleVariables(context: object) {\n    const simpleVariablesRegexpHandler: FoundRegexpHandler = (\n      foundedDynamicReg,\n      foundedMatch\n    ) => {\n      const property = this.getProperty(context, foundedDynamicReg);\n      if (foundedDynamicReg) {\n        const propertyElementIsComponent =\n          Array.isArray(property) &&\n          property.every((propertyElement) => {\n            const elementIsString = typeof propertyElement === \"string\";\n            return (\n              elementIsString &&\n              propertyElement.trim().startsWith(\"<div id=component-\")\n            );\n          });\n\n        this.modifyTemplate = this.modifyTemplate.replace(\n          new RegExp(foundedMatch, \"gi\"),\n          propertyElementIsComponent ? property.join(\"\") : property\n        );\n      }\n    };\n\n    RegexpHandler.handAllFoundRegexp(\n      TEMPLATE_VARIABLES_REGEXP,\n      this.modifyTemplate,\n      simpleVariablesRegexpHandler\n    );\n  }\n  private renderCondition(foundedDynamicReg: string, foundedMatch: string) {\n    const foundedConditionArgs =\n      TEMPLATE_IF_THEN_REGEXP.exec(foundedDynamicReg);\n    const condition = eval(foundedConditionArgs[1]);\n    const ifSuccessThen = foundedConditionArgs[2];\n    const ifFalseThen = foundedConditionArgs[3];\n    if (condition) {\n      this.modifyTemplate = this.modifyTemplate.replace(\n        foundedMatch,\n        ifSuccessThen\n      );\n    } else if (ifFalseThen) {\n      this.modifyTemplate = this.modifyTemplate.replace(foundedMatch, \"\");\n    }\n  }\n}\n","export const TEMPLATE_DYNAMIC_REGEXP = new RegExp(/\\{\\{([\\s\\S]*?)\\}\\}/gi);\nexport const TEMPLATE_IF_THEN_REGEXP = new RegExp(\n  /if\\((.*?)\\)then{(.*?)}(else{(.*?)})?/gi\n);\nexport const TEMPLATE_VARIABLES_REGEXP = new RegExp(/!(.*?)!/gi);\n","export type FoundRegexpHandler = (\n  foundedDynamicReg: string,\n  foundedMatch: string\n) => void;\nexport class RegexpHandler {\n  static handAllFoundRegexp(\n    regexpWhichNeedToFound: RegExp,\n    observeString: string,\n    foundRegexpHandler: FoundRegexpHandler,\n    splitAndJoin: boolean = true\n  ) {\n    let nextFoundMatchArray: RegExpExecArray = null;\n    while ((nextFoundMatchArray = regexpWhichNeedToFound.exec(observeString))) {\n      const foundedDynamicReg = splitAndJoin\n        ? nextFoundMatchArray[1].split(\" \").join(\"\")\n        : nextFoundMatchArray[1];\n      const foundedMatch = nextFoundMatchArray[0];\n      foundRegexpHandler(foundedDynamicReg, foundedMatch);\n    }\n  }\n}\n","import { FIRST_SECOND_NAME_ERROR } from \"./const\";\n\ntype ValidateTuple = {\n  validateHandler: (value: string) => boolean;\n  validateError: string;\n};\n\ntype Validators = { [key: string]: Array<ValidateTuple> };\n\nexport class Validator {\n  private validators: Validators = {\n    login: [\n      {\n        validateHandler: (val) => val.length < 3,\n        validateError: \"Логин слишком короткий, от 3х символов\",\n      },\n      {\n        validateHandler: (val) => val.length > 20,\n        validateError: \"Логин слишком длинный, до 20ти символов\",\n      },\n      {\n        validateHandler: (val) => /^[\\d]{3,20}$/gm.test(val),\n        validateError: \"Логин не может состоять только из цифр\",\n      },\n      {\n        validateHandler: (val) => !/^[0-9A-z_-]{3,20}$/gm.test(val),\n        validateError:\n          \"от 3 до 20 символов, латиница, может содержать цифры, но не состоять из них, без пробелов, без спецсимволов (допустимы дефис и нижнее подчёркивание)\",\n      },\n    ],\n    password: [\n      {\n        validateHandler: (val) => val.length < 8,\n        validateError: \"Пароль слишком короткий, от 8и символов\",\n      },\n      {\n        validateHandler: (val) => val.length > 40,\n        validateError: \"Пароль слишком длинный, до 40ти символов\",\n      },\n      {\n        validateHandler: (val) => !/[A-Z]+/gm.test(val),\n        validateError: \"Пароль должен содержать хотя бы одну заглавную букву\",\n      },\n      {\n        validateHandler: (val) => !/[0-9]+/gm.test(val),\n        validateError: \"Пароль должен содержать хотя бы цифру\",\n      },\n    ],\n    firstName: [\n      {\n        validateHandler: (val) => !/^[A-ZА-Я]{1}[a-zA-Zа-яА-Я-]*$/gm.test(val),\n        validateError: FIRST_SECOND_NAME_ERROR,\n      },\n    ],\n    secondName: [\n      {\n        validateHandler: (val) => !/^[A-ZА-Я]{1}[a-zA-Zа-яА-Я-]*$/gm.test(val),\n        validateError: FIRST_SECOND_NAME_ERROR,\n      },\n    ],\n    displayLogin: [\n      {\n        validateHandler: (val) => !val,\n        validateError: \"Не должно быть пустым\",\n      },\n    ],\n    email: [\n      {\n        validateHandler: (val) => !/^[0-9A-z]+@[0-9A-z]+\\..+$/gm.test(val),\n        validateError: \"Не верный формат\",\n      },\n    ],\n    phone: [\n      {\n        validateHandler: (val) => !/^\\+?\\d{10,15}$/gm.test(val),\n        validateError: \"Неверный формат номера\",\n      },\n    ],\n    message: [\n      {\n        validateHandler: (val) => !!val,\n        validateError: \"Сообщение пустое\",\n      },\n    ],\n  };\n\n  public validate(typeOfValidator: string, value: string): string {\n    const takenValidator = this.validators[typeOfValidator];\n    if (takenValidator) {\n      for (const { validateHandler, validateError } of takenValidator) {\n        if (validateHandler(value)) {\n          return validateError;\n        }\n      }\n    } else {\n      throw new Error(\"Такого валидатора не существует.\");\n    }\n  }\n}\n","export const FIRST_SECOND_NAME_ERROR = 'латиница или кириллица, первая буква должна быть заглавной, без пробелов и без цифр, нет спецсимволов (допустим только дефис)';\n","import { Block } from \"../../utils/framework/block\";\nimport { inputTemplate } from \"./input.tmpl\";\n\nexport class Input extends Block {\n  constructor(props) {\n    super(inputTemplate, props);\n  }\n}\n","import './input.scss';\nimport { Template } from '../../utils/framework/templateEngine/template';\n\nexport const inputTemplate = new Template(`\n<div class=\"login_inputs\">\n     <label class=\"input__with-label\">\n          <span class=\"input__with-label_label\">\n            {{ !labelName !}}\n          </span>\n          <input type=\"{{ !type !}}\" value=\"{{!inputValue!}}\" class=\"input__with-label_input\" type=\"text\" name=\"login\" id=\"LOGIN\">\n    </label>\n </div>\n`);\n","import { Block } from \"../../../utils/framework/block\";\nimport { mainBtnTemplate } from \"./mainBtn.tmpl\";\n\nexport class MainBtn extends Block {\n  constructor(props) {\n    super(mainBtnTemplate, props);\n  }\n}\n","import { Template } from '../../../utils/framework/templateEngine/template';\nimport '../btns.scss';\n\nexport const mainBtnTemplate = new Template(`\n<button type=\"{{!type!}}\" class=\"btn btn__main login_btn__main\">\n    <span class=\"btn_text\">\n        {{text}}\n    </span>\n</button>\n`);\n","import { Block } from \"../../../utils/framework/block\";\nimport { defaultBtnTemplate } from \"./defaultBtn.tmpl\";\n\nexport class DefaultBtn extends Block {\n  constructor(props) {\n    super(defaultBtnTemplate, props);\n  }\n}\n","import { Template } from '../../../utils/framework/templateEngine/template';\nimport '../btns.scss';\n\nexport const defaultBtnTemplate = new Template(\n  `\n    <button class=\"btn\">\n       <span class=\"btn_text\">\n         {{!text!}}\n        </span>\n     </button>\n    `,\n);\n"],"names":["$kOSfN","parcelRequire","$d4bea547d0303d35$var$LoginLayout","Block","constructor","props","super","$lsdTN","loginLayoutTemplate","$d4bea547d0303d35$var$validator","$5G1AW","Validator","$d4bea547d0303d35$var$mainBtnData","state","type","text","events","submit","e","console","log","$d4bea547d0303d35$var$defaultBtnData","click","$d4bea547d0303d35$export$7b6e622d92e8e9d3","target","stateName","validate","value","this","updateState","$d4bea547d0303d35$export$e922a7f9ecee71a7","logins","$hGjuS","Input","labelName","inputValue","blur","call","focus","MainButton","$2XXZC","MainBtn","DefaultButton","$av0la","DefaultBtn","preventDefault","getComponentChildren","forEach","login","currentLoginInputState","getState","error","$7d9sB","$58d97bb0b85e1551$export$d96a8827a60d6b69","eventBus","EventBus","componentId","Math","random","template","componentProps","children","simpleState","findChildrenAndState","componentChildren","componentSimpleState","createDummyChildren","makeStateProxy","registerEvents","notify","$4lYPt","Events","INIT","subscribeCallbackOnEvent","init","bind","COMPONENT_DID_MOUNT","componentDidMount","COMPONENT_RENDER","render","COMPONENT_DID_UPDATE","componentDidUpdate","handlers","set","p","componentState","Proxy","element","document","createElement","createDummyElement","oldProps","Object","keys","eventName","removeEventListener","innerHTML","compile","renderChildren","addEventListener","entries","key","Array","isArray","every","childElement","index","push","childrenName","childrenValue","child","childrenDummy","renderOneChild","childrenId","toString","foundChildrenDummy","querySelector","Error","replaceWith","getCompiledElement","values","newValue","renderDom","rootSelector","appendChild","$310a9b1b34a15572$export$5087227eb54526","listeners","callback","unSubscribeCallbackFromEvent","filter","listener","event","args","Event","$5ebc5a4a6c8b8bad$export$ada873a34909da65","$f81036883e9c1281$export$bd6969d6c35965cd","Template","$gQ5XG","initialTemplate","modifyTemplate","context","result","foundDynamicRegexp","getProperty","object","propertyName","split","propertyOfObject","currentObject","renderSimpleVariables","$1Zm4c","RegexpHandler","handAllFoundRegexp","TEMPLATE_DYNAMIC_REGEXP","foundedDynamicReg","foundedMatch","match","TEMPLATE_IF_THEN_REGEXP","renderCondition","replaceAllDynamicRegExp","replace","TEMPLATE_VARIABLES_REGEXP","property","propertyElementIsComponent","propertyElement","trim","startsWith","RegExp","join","foundedConditionArgs","exec","condition","eval","ifSuccessThen","ifFalseThen","$6dcbe561370eb26f$export$fa1ae4cb4cfb3d85","$6dcbe561370eb26f$export$28a67a1e38c95a8","$6dcbe561370eb26f$export$f7f3291483a69df7","$eaab1fb6c9af018e$export$394a50fda190d88a","static","regexpWhichNeedToFound","observeString","foundRegexpHandler","splitAndJoin","nextFoundMatchArray","$e4Mb8","$400ba9a88679fa9c$export$9eeb22c0bba4ed5e","validators","validateHandler","val","length","validateError","test","password","firstName","FIRST_SECOND_NAME_ERROR","secondName","displayLogin","email","phone","message","typeOfValidator","takenValidator","$39fda919c01a8f0f$export$e04500f054e8bc9f","$4b2c0907ae6b3a47$export$f5b8910cec6cf069","$bXv5D","inputTemplate","$5f37ec362f85dfb9$export$54f544924ce801b0","$93ae5d9fe1830235$export$6fd5a6bac8172be1","$jOciJ","mainBtnTemplate","$7215e22cc75e39b7$export$b7c1ffc22854daeb","$64dfd100862f2989$export$528692382fe87071","$5qkuf","defaultBtnTemplate","$9e74b63d57a7c315$export$9473b20ffcefbc57"],"version":3,"file":"login.897b5c9e.js.map","sourceRoot":"../"}